"use strict";(self.webpackChunk_veiled_lg_veiled_lg_github_io=self.webpackChunk_veiled_lg_veiled_lg_github_io||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/introduction","docId":"introduction"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"First steps","href":"/docs/getting-started/first-steps","docId":"getting-started/first-steps"}],"href":"/docs/category/getting-started"},{"type":"category","label":"Lua API","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Render","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Color","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"new","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"From rgba","href":"/docs/lua/render/color/new/rgba","docId":"lua/render/color/new/rgba"},{"type":"link","label":"From hex","href":"/docs/lua/render/color/new/hex","docId":"lua/render/color/new/hex"},{"type":"link","label":"From string","href":"/docs/lua/render/color/new/string","docId":"lua/render/color/new/string"}],"href":"/docs/category/new"},{"type":"link","label":"r","href":"/docs/lua/render/color/r","docId":"lua/render/color/r"},{"type":"link","label":"g","href":"/docs/lua/render/color/g","docId":"lua/render/color/g"},{"type":"link","label":"b","href":"/docs/lua/render/color/b","docId":"lua/render/color/b"},{"type":"link","label":"a (transparency)","href":"/docs/lua/render/color/a","docId":"lua/render/color/a"},{"type":"link","label":"opacity (transparency)","href":"/docs/lua/render/color/opacity","docId":"lua/render/color/opacity"},{"type":"link","label":"hex","href":"/docs/lua/render/color/hex","docId":"lua/render/color/hex"}],"href":"/docs/category/color"},{"type":"category","label":"Draw","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Constants","href":"/docs/lua/render/draw/constants","docId":"lua/render/draw/constants"},{"type":"link","label":"line","href":"/docs/lua/render/draw/line","docId":"lua/render/draw/line"},{"type":"link","label":"rect","href":"/docs/lua/render/draw/rect","docId":"lua/render/draw/rect"},{"type":"link","label":"filled_rect","href":"/docs/lua/render/draw/filled_rect","docId":"lua/render/draw/filled_rect"},{"type":"link","label":"circle","href":"/docs/lua/render/draw/circle","docId":"lua/render/draw/circle"},{"type":"link","label":"filled_circle","href":"/docs/lua/render/draw/filled_circle","docId":"lua/render/draw/filled_circle"},{"type":"link","label":"text","href":"/docs/lua/render/draw/text","docId":"lua/render/draw/text"},{"type":"link","label":"scissor_begin","href":"/docs/lua/render/draw/scissor_begin","docId":"lua/render/draw/scissor_begin"},{"type":"link","label":"scissor_end","href":"/docs/lua/render/draw/scissor_end","docId":"lua/render/draw/scissor_end"},{"type":"link","label":"calc_text_size","href":"/docs/lua/render/draw/calc_text_size","docId":"lua/render/draw/calc_text_size"},{"type":"link","label":"calc_health_color","href":"/docs/lua/render/draw/calc_health_color","docId":"lua/render/draw/calc_health_color"}],"href":"/docs/category/draw"}],"href":"/docs/category/render"},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"CVar","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Register","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Boolean","href":"/docs/lua/config/cvar/creation/bool","docId":"lua/config/cvar/creation/bool"},{"type":"link","label":"Integer","href":"/docs/lua/config/cvar/creation/int","docId":"lua/config/cvar/creation/int"},{"type":"link","label":"Floating","href":"/docs/lua/config/cvar/creation/float","docId":"lua/config/cvar/creation/float"},{"type":"category","label":"Color","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"From rgba","href":"/docs/lua/config/cvar/creation/color/rgba","docId":"lua/config/cvar/creation/color/rgba"},{"type":"link","label":"From hex","href":"/docs/lua/config/cvar/creation/color/hex","docId":"lua/config/cvar/creation/color/hex"}],"href":"/docs/category/color-1"},{"type":"link","label":"String","href":"/docs/lua/config/cvar/creation/string","docId":"lua/config/cvar/creation/string"}],"href":"/docs/category/register"},{"type":"link","label":"find","href":"/docs/lua/config/cvar/find","docId":"lua/config/cvar/find"},{"type":"category","label":"Getter","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"name","href":"/docs/lua/config/cvar/get/name","docId":"lua/config/cvar/get/name"},{"type":"link","label":"description","href":"/docs/lua/config/cvar/get/description","docId":"lua/config/cvar/get/description"},{"type":"link","label":"bool","href":"/docs/lua/config/cvar/get/bool","docId":"lua/config/cvar/get/bool"},{"type":"link","label":"int","href":"/docs/lua/config/cvar/get/int","docId":"lua/config/cvar/get/int"},{"type":"link","label":"float","href":"/docs/lua/config/cvar/get/float","docId":"lua/config/cvar/get/float"},{"type":"link","label":"color","href":"/docs/lua/config/cvar/get/color","docId":"lua/config/cvar/get/color"},{"type":"link","label":"string","href":"/docs/lua/config/cvar/get/string","docId":"lua/config/cvar/get/string"}],"href":"/docs/category/getter"},{"type":"category","label":"Setter","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"bool","href":"/docs/lua/config/cvar/set/bool","docId":"lua/config/cvar/set/bool"},{"type":"link","label":"int","href":"/docs/lua/config/cvar/set/int","docId":"lua/config/cvar/set/int"},{"type":"link","label":"float","href":"/docs/lua/config/cvar/set/float","docId":"lua/config/cvar/set/float"},{"type":"category","label":"color","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using rgba","href":"/docs/lua/config/cvar/set/color/rgba","docId":"lua/config/cvar/set/color/rgba"},{"type":"link","label":"Using hex","href":"/docs/lua/config/cvar/set/color/hex","docId":"lua/config/cvar/set/color/hex"}],"href":"/docs/category/color-2"}],"href":"/docs/category/setter"}],"href":"/docs/category/cvar"},{"type":"category","label":"Configs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"register_weapon","href":"/docs/lua/config/configs/register_weapon","docId":"lua/config/configs/register_weapon"},{"type":"link","label":"get_weapon_name","href":"/docs/lua/config/configs/get_weapon_name","docId":"lua/config/configs/get_weapon_name"},{"type":"link","label":"get_configs","href":"/docs/lua/config/configs/get_configs","docId":"lua/config/configs/get_configs"},{"type":"link","label":"get_current","href":"/docs/lua/config/configs/get_current","docId":"lua/config/configs/get_current"},{"type":"link","label":"load","href":"/docs/lua/config/configs/load","docId":"lua/config/configs/load"},{"type":"link","label":"save","href":"/docs/lua/config/configs/save","docId":"lua/config/configs/save"},{"type":"link","label":"reload","href":"/docs/lua/config/configs/reload","docId":"lua/config/configs/reload"}],"href":"/docs/category/configs"}],"href":"/docs/category/configuration"},{"type":"category","label":"Memory","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Module","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"base","href":"/docs/lua/memory/module/base","docId":"lua/memory/module/base"},{"type":"link","label":"size","href":"/docs/lua/memory/module/size","docId":"lua/memory/module/size"},{"type":"link","label":"scan","href":"/docs/lua/memory/module/scan","docId":"lua/memory/module/scan"}],"href":"/docs/category/module"},{"type":"category","label":"Process","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Read","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"bool","href":"/docs/lua/memory/process/read/bool","docId":"lua/memory/process/read/bool"},{"type":"link","label":"i8","href":"/docs/lua/memory/process/read/i8","docId":"lua/memory/process/read/i8"},{"type":"link","label":"i16","href":"/docs/lua/memory/process/read/i16","docId":"lua/memory/process/read/i16"},{"type":"link","label":"i32","href":"/docs/lua/memory/process/read/i32","docId":"lua/memory/process/read/i32"},{"type":"link","label":"i64","href":"/docs/lua/memory/process/read/i64","docId":"lua/memory/process/read/i64"},{"type":"link","label":"u8","href":"/docs/lua/memory/process/read/u8","docId":"lua/memory/process/read/u8"},{"type":"link","label":"u16","href":"/docs/lua/memory/process/read/u16","docId":"lua/memory/process/read/u16"},{"type":"link","label":"u32","href":"/docs/lua/memory/process/read/u32","docId":"lua/memory/process/read/u32"},{"type":"link","label":"u64","href":"/docs/lua/memory/process/read/u64","docId":"lua/memory/process/read/u64"},{"type":"link","label":"f32","href":"/docs/lua/memory/process/read/f32","docId":"lua/memory/process/read/f32"},{"type":"link","label":"f64","href":"/docs/lua/memory/process/read/f64","docId":"lua/memory/process/read/f64"},{"type":"link","label":"string","href":"/docs/lua/memory/process/read/string","docId":"lua/memory/process/read/string"}],"href":"/docs/category/read"},{"type":"category","label":"Write","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"bool","href":"/docs/lua/memory/process/write/bool","docId":"lua/memory/process/write/bool"},{"type":"link","label":"i8","href":"/docs/lua/memory/process/write/i8","docId":"lua/memory/process/write/i8"},{"type":"link","label":"i16","href":"/docs/lua/memory/process/write/i16","docId":"lua/memory/process/write/i16"},{"type":"link","label":"i32","href":"/docs/lua/memory/process/write/i32","docId":"lua/memory/process/write/i32"},{"type":"link","label":"i64","href":"/docs/lua/memory/process/write/i64","docId":"lua/memory/process/write/i64"},{"type":"link","label":"u8","href":"/docs/lua/memory/process/write/u8","docId":"lua/memory/process/write/u8"},{"type":"link","label":"u16","href":"/docs/lua/memory/process/write/u16","docId":"lua/memory/process/write/u16"},{"type":"link","label":"u32","href":"/docs/lua/memory/process/write/u32","docId":"lua/memory/process/write/u32"},{"type":"link","label":"u64","href":"/docs/lua/memory/process/write/u64","docId":"lua/memory/process/write/u64"},{"type":"link","label":"f32","href":"/docs/lua/memory/process/write/f32","docId":"lua/memory/process/write/f32"},{"type":"link","label":"f64","href":"/docs/lua/memory/process/write/f64","docId":"lua/memory/process/write/f64"},{"type":"link","label":"string","href":"/docs/lua/memory/process/write/string","docId":"lua/memory/process/write/string"}],"href":"/docs/category/write"},{"type":"link","label":"get_module","href":"/docs/lua/memory/process/get_module","docId":"lua/memory/process/get_module"}],"href":"/docs/category/process"}],"href":"/docs/category/memory"}],"href":"/docs/category/lua-api"}]},"docs":{"getting-started/first-steps":{"id":"getting-started/first-steps","title":"First steps","description":"In this set of articles, you\'ll learn the core fundamentals to be able to use the Lua API.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"This article assumes you already have a fully functional libvirt domain with CPI passthrough working on a dedicated monitor. Otherwise, check out this ArchWiki page.","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"[url_lg]//looking-glass.io","sidebar":"tutorialSidebar"},"lua/config/configs/get_configs":{"id":"lua/config/configs/get_configs","title":"get_configs","description":"Returns an index based table with all config names.","sidebar":"tutorialSidebar"},"lua/config/configs/get_current":{"id":"lua/config/configs/get_current","title":"get_current","description":"Return the name of the current configuration if one is loaded.","sidebar":"tutorialSidebar"},"lua/config/configs/get_weapon_name":{"id":"lua/config/configs/get_weapon_name","title":"get_weapon_name","description":"Returns the name of the weapon with the associated id if possible.","sidebar":"tutorialSidebar"},"lua/config/configs/load":{"id":"lua/config/configs/load","title":"load","description":"Reads a configuration file from the file system and parses its contents.","sidebar":"tutorialSidebar"},"lua/config/configs/register_weapon":{"id":"lua/config/configs/register_weapon","title":"register_weapon","description":"Registers a key-value pair (Id, Name) to get individual values of the CVar userdata.","sidebar":"tutorialSidebar"},"lua/config/configs/reload":{"id":"lua/config/configs/reload","title":"reload","description":"Reads the current configuration file (again) from the file system and parses its contents.","sidebar":"tutorialSidebar"},"lua/config/configs/save":{"id":"lua/config/configs/save","title":"save","description":"Writes a configuration file to the file system.","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/bool":{"id":"lua/config/cvar/creation/bool","title":"Boolean","description":"Creates a new CVar userdata and sets the internal type to bool.","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/color/hex":{"id":"lua/config/cvar/creation/color/hex","title":"From hex","description":"Creates a new CVar userdata and sets the internal type to u8[8].","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/color/rgba":{"id":"lua/config/cvar/creation/color/rgba","title":"From rgba","description":"Creates a new CVar userdata and sets the internal type to u8[4].","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/float":{"id":"lua/config/cvar/creation/float","title":"Floating","description":"Creates a new CVar userdata and sets the internal type to float.","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/int":{"id":"lua/config/cvar/creation/int","title":"Integer","description":"Creates a new CVar userdata and sets the internal type to int.","sidebar":"tutorialSidebar"},"lua/config/cvar/creation/string":{"id":"lua/config/cvar/creation/string","title":"String","description":"Creates a new CVar userdata and sets the internal type to char*.","sidebar":"tutorialSidebar"},"lua/config/cvar/find":{"id":"lua/config/cvar/find","title":"find","description":"Searches for the CVar with the given name and returns it on success.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/bool":{"id":"lua/config/cvar/get/bool","title":"get_bool","description":"Returns the current value as boolean if possible.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/color":{"id":"lua/config/cvar/get/color","title":"get_color","description":"Returns the color as 32 bit number.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/description":{"id":"lua/config/cvar/get/description","title":"description","description":"Returns the description if it exists.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/float":{"id":"lua/config/cvar/get/float","title":"get_float","description":"Returns the current value as number.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/int":{"id":"lua/config/cvar/get/int","title":"get_int","description":"Returns the current value as number without decimals.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/name":{"id":"lua/config/cvar/get/name","title":"name","description":"Returns the internal unique name.","sidebar":"tutorialSidebar"},"lua/config/cvar/get/string":{"id":"lua/config/cvar/get/string","title":"get_string","description":"Returns either the existing value (if the internal type is string), otherwise it is formatted as described below:","sidebar":"tutorialSidebar"},"lua/config/cvar/set/bool":{"id":"lua/config/cvar/set/bool","title":"set_bool","description":"Set value if the internal type is boolean, number or string.","sidebar":"tutorialSidebar"},"lua/config/cvar/set/color/hex":{"id":"lua/config/cvar/set/color/hex","title":"Using hex","description":"Sets the respective color channels.","sidebar":"tutorialSidebar"},"lua/config/cvar/set/color/rgba":{"id":"lua/config/cvar/set/color/rgba","title":"Using rgba","description":"Sets the respective color channels.","sidebar":"tutorialSidebar"},"lua/config/cvar/set/float":{"id":"lua/config/cvar/set/float","title":"set_float","description":"Set value and cast / format it before, if the internal type is not float.","sidebar":"tutorialSidebar"},"lua/config/cvar/set/int":{"id":"lua/config/cvar/set/int","title":"set_int","description":"Set value and cast / format it before, if the internal type is not int.","sidebar":"tutorialSidebar"},"lua/memory/module/base":{"id":"lua/memory/module/base","title":"base","description":"Returns the module image base address.","sidebar":"tutorialSidebar"},"lua/memory/module/scan":{"id":"lua/memory/module/scan","title":"scan","description":"Searches the region of the module for the given signature.","sidebar":"tutorialSidebar"},"lua/memory/module/size":{"id":"lua/memory/module/size","title":"size","description":"Returns the module image size.","sidebar":"tutorialSidebar"},"lua/memory/process/get_module":{"id":"lua/memory/process/get_module","title":"get_module","description":"Searches for the Module with the given name.","sidebar":"tutorialSidebar"},"lua/memory/process/read/bool":{"id":"lua/memory/process/read/bool","title":"read_bool","description":"Reads a boolean from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/f32":{"id":"lua/memory/process/read/f32","title":"read_f32","description":"Reads a four byte floating point from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/f64":{"id":"lua/memory/process/read/f64","title":"read_f64","description":"Reads a eight byte floating point (double) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/i16":{"id":"lua/memory/process/read/i16","title":"read_i16","description":"Reads a signed 16 bit integer (two bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/i32":{"id":"lua/memory/process/read/i32","title":"read_i32","description":"Reads a signed 32 bit integer (four bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/i64":{"id":"lua/memory/process/read/i64","title":"read_i64","description":"Reads a signed 64 bit integer (eight bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/i8":{"id":"lua/memory/process/read/i8","title":"read_i8","description":"Reads a signed 8 bit integer (one byte) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/string":{"id":"lua/memory/process/read/string","title":"read_string","description":"Reads a string from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/u16":{"id":"lua/memory/process/read/u16","title":"read_u16","description":"Reads an unsigned 16 bit integer (two bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/u32":{"id":"lua/memory/process/read/u32","title":"read_u32","description":"Reads an unsigned 32 bit integer (four bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/u64":{"id":"lua/memory/process/read/u64","title":"read_u64","description":"Reads an unsigned 64 bit integer (eight bytes) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/read/u8":{"id":"lua/memory/process/read/u8","title":"read_u8","description":"Reads an unsigned 8 bit integer (one byte) from given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/bool":{"id":"lua/memory/process/write/bool","title":"write_bool","description":"Writes the value as boolean to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/f32":{"id":"lua/memory/process/write/f32","title":"write_f32","description":"Writes the value as 32 bit floating point (four bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/f64":{"id":"lua/memory/process/write/f64","title":"write_f64","description":"Writes the value as 64 bit floating point (eight bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/i16":{"id":"lua/memory/process/write/i16","title":"write_i16","description":"Writes the value as signed 16 bit integer (two bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/i32":{"id":"lua/memory/process/write/i32","title":"write_i32","description":"Writes the value as signed 32 bit integer (four bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/i64":{"id":"lua/memory/process/write/i64","title":"write_i64","description":"Writes the value as signed 64 bit integer (eight bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/i8":{"id":"lua/memory/process/write/i8","title":"write_i8","description":"Writes the value as signed 8 bit integer (one byte) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/string":{"id":"lua/memory/process/write/string","title":"write_string","description":"Writes the string value to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/u16":{"id":"lua/memory/process/write/u16","title":"write_u16","description":"Writes the value as unsigned 16 bit integer (two bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/u32":{"id":"lua/memory/process/write/u32","title":"write_u32","description":"Writes the value as unsigned 32 bit integer (four bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/u64":{"id":"lua/memory/process/write/u64","title":"write_u64","description":"Writes the value as unsigned 64 bit integer (eight bytes) to the given address.","sidebar":"tutorialSidebar"},"lua/memory/process/write/u8":{"id":"lua/memory/process/write/u8","title":"write_u8","description":"Writes the value as unsigned 8 bit integer (one byte) to the given address.","sidebar":"tutorialSidebar"},"lua/render/color/a":{"id":"lua/render/color/a","title":"a","description":"Returns the alpha value (transparency) and optionally offers the possibility to update this value.","sidebar":"tutorialSidebar"},"lua/render/color/b":{"id":"lua/render/color/b","title":"b","description":"Returns the blue tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/g":{"id":"lua/render/color/g","title":"g","description":"Returns the green tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/hex":{"id":"lua/render/color/hex","title":"hex","description":"Returns the color value as 32 bit hexadecimal number.","sidebar":"tutorialSidebar"},"lua/render/color/new/hex":{"id":"lua/render/color/new/hex","title":"From hex","description":"Creates a new Color userdata and assigns it the values from hex to it.","sidebar":"tutorialSidebar"},"lua/render/color/new/rgba":{"id":"lua/render/color/new/rgba","title":"From rgba","description":"Creates a new Color userdata and assigns it the values r, g, b and optionally a.","sidebar":"tutorialSidebar"},"lua/render/color/new/string":{"id":"lua/render/color/new/string","title":"From string","description":"Creates a new Color userdata and assigns it the color from format.","sidebar":"tutorialSidebar"},"lua/render/color/opacity":{"id":"lua/render/color/opacity","title":"opacity","description":"Returns the value of the opacity and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/r":{"id":"lua/render/color/r","title":"r","description":"Returns the red tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/draw/calc_health_color":{"id":"lua/render/draw/calc_health_color","title":"calc_health_color","description":"Calculates the color from green to red based on the given health.","sidebar":"tutorialSidebar"},"lua/render/draw/calc_text_size":{"id":"lua/render/draw/calc_text_size","title":"calc_text_size","description":"Calculate the width and height of given text.","sidebar":"tutorialSidebar"},"lua/render/draw/circle":{"id":"lua/render/draw/circle","title":"circle","description":"Draws a circle.","sidebar":"tutorialSidebar"},"lua/render/draw/constants":{"id":"lua/render/draw/constants","title":"Constants","description":"An overview of global variables which can often be combined as a bit mask (flags).","sidebar":"tutorialSidebar"},"lua/render/draw/filled_circle":{"id":"lua/render/draw/filled_circle","title":"filled_circle","description":"Draws a filled circle.","sidebar":"tutorialSidebar"},"lua/render/draw/filled_rect":{"id":"lua/render/draw/filled_rect","title":"filled_rect","description":"Draws a filled rectangle.","sidebar":"tutorialSidebar"},"lua/render/draw/line":{"id":"lua/render/draw/line","title":"line","description":"Draws a line.","sidebar":"tutorialSidebar"},"lua/render/draw/rect":{"id":"lua/render/draw/rect","title":"rect","description":"Draws a rectangle.","sidebar":"tutorialSidebar"},"lua/render/draw/scissor_begin":{"id":"lua/render/draw/scissor_begin","title":"scissor_begin","description":"Start of redering within a region. Anything that rises above it is not visible.","sidebar":"tutorialSidebar"},"lua/render/draw/scissor_end":{"id":"lua/render/draw/scissor_end","title":"scissor_end","description":"Ends rendering within a specific region.","sidebar":"tutorialSidebar"},"lua/render/draw/text":{"id":"lua/render/draw/text","title":"text","description":"Draws a text.","sidebar":"tutorialSidebar"}}}')}}]);