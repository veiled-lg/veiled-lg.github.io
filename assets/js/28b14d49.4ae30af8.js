"use strict";(self.webpackChunk_veiled_lg_veiled_lg_github_io=self.webpackChunk_veiled_lg_veiled_lg_github_io||[]).push([[8113],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),c=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),m=a,f=s["".concat(d,".").concat(m)]||s[m]||p[m]||l;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},1006:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const l={sidebar_position:7},o="text",i={unversionedId:"lua/render/draw/text",id:"lua/render/draw/text",title:"text",description:"Draws a text.",source:"@site/docs/lua/render/draw/text.md",sourceDirName:"lua/render/draw",slug:"/lua/render/draw/text",permalink:"/docs/lua/render/draw/text",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"filled_circle",permalink:"/docs/lua/render/draw/filled_circle"},next:{title:"scissor_begin",permalink:"/docs/lua/render/draw/scissor_begin"}},d={},c=[{value:"Declaration",id:"declaration",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"<code>x</code>",id:"x",level:3},{value:"<code>y</code>",id:"y",level:3},{value:"<code>color</code>",id:"color",level:3},{value:"<code>text</code>",id:"text-1",level:3},{value:"<code>flags</code>",id:"flags",level:3},{value:"Return value",id:"return-value",level:2},{value:"Remarks",id:"remarks",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"text"},"text"),(0,a.kt)("p",null,"Draws a text."),(0,a.kt)("h2",{id:"declaration"},"Declaration"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},".text(x, y, color, text[, flags])")),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"Draw.text(5, 5, 0xFFFFFFFF, 'Some cool watermark')\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("h3",{id:"x"},(0,a.kt)("inlineCode",{parentName:"h3"},"x")),(0,a.kt)("p",null,"The X coordinates of the window in pixels."),(0,a.kt)("h3",{id:"y"},(0,a.kt)("inlineCode",{parentName:"h3"},"y")),(0,a.kt)("p",null,"The Y coordinates of the window in pixels."),(0,a.kt)("h3",{id:"color"},(0,a.kt)("inlineCode",{parentName:"h3"},"color")),(0,a.kt)("p",null,"The color of the line, allowed types are ",(0,a.kt)("inlineCode",{parentName:"p"},"number")," (32 bit hexadecimal), ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"userdata")," of type ",(0,a.kt)("inlineCode",{parentName:"p"},"Color"),"."),(0,a.kt)("h3",{id:"text-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"text")),(0,a.kt)("p",null,"The text to render."),(0,a.kt)("h3",{id:"flags"},(0,a.kt)("inlineCode",{parentName:"h3"},"flags")),(0,a.kt)("p",null,"Optionally the ",(0,a.kt)("inlineCode",{parentName:"p"},"TEXT_FLAG_")," ",(0,a.kt)("a",{parentName:"p",href:"constants"},"constants")," can be used here."),(0,a.kt)("h2",{id:"return-value"},"Return value"),(0,a.kt)("p",null,"The function returns no value."),(0,a.kt)("h2",{id:"remarks"},"Remarks"),(0,a.kt)("p",null,"To create a bit mask like in C (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"1 | 2 | 4"),"), use ",(0,a.kt)("inlineCode",{parentName:"p"},"Veiled.bit_mask()"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- would be the same as using TEXT_FLAG_CENTERED directly\nlocal flags = Veiled.bit_mask(TEXT_FLAG_CENTER_X, TEXT_FLAG_CENTER_Y)\n")),(0,a.kt)("p",null,"The method must be called within a render callback."))}p.isMDXComponent=!0}}]);