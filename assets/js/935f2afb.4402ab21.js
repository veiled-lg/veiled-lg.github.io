"use strict";(self.webpackChunk_veiled_lg_veiled_lg_github_io=self.webpackChunk_veiled_lg_veiled_lg_github_io||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/introduction","docId":"introduction"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"First steps","href":"/docs/getting-started/first-steps","docId":"getting-started/first-steps"}],"href":"/docs/category/getting-started"},{"type":"category","label":"Lua API","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Render","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Color","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"new","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"From rgba","href":"/docs/lua/render/color/new/rgba","docId":"lua/render/color/new/rgba"},{"type":"link","label":"From hex","href":"/docs/lua/render/color/new/hex","docId":"lua/render/color/new/hex"},{"type":"link","label":"From string","href":"/docs/lua/render/color/new/string","docId":"lua/render/color/new/string"}],"href":"/docs/category/new"},{"type":"link","label":"r","href":"/docs/lua/render/color/r","docId":"lua/render/color/r"},{"type":"link","label":"g","href":"/docs/lua/render/color/g","docId":"lua/render/color/g"},{"type":"link","label":"b","href":"/docs/lua/render/color/b","docId":"lua/render/color/b"},{"type":"link","label":"a (transparency)","href":"/docs/lua/render/color/a","docId":"lua/render/color/a"},{"type":"link","label":"opacity (transparency)","href":"/docs/lua/render/color/opacity","docId":"lua/render/color/opacity"},{"type":"link","label":"hex","href":"/docs/lua/render/color/hex","docId":"lua/render/color/hex"}],"href":"/docs/category/color"},{"type":"category","label":"Draw","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Constants","href":"/docs/lua/render/draw/constants","docId":"lua/render/draw/constants"},{"type":"link","label":"line","href":"/docs/lua/render/draw/line","docId":"lua/render/draw/line"},{"type":"link","label":"rect","href":"/docs/lua/render/draw/rect","docId":"lua/render/draw/rect"},{"type":"link","label":"filled_rect","href":"/docs/lua/render/draw/filled_rect","docId":"lua/render/draw/filled_rect"},{"type":"link","label":"circle","href":"/docs/lua/render/draw/circle","docId":"lua/render/draw/circle"},{"type":"link","label":"filled_circle","href":"/docs/lua/render/draw/filled_circle","docId":"lua/render/draw/filled_circle"},{"type":"link","label":"text","href":"/docs/lua/render/draw/text","docId":"lua/render/draw/text"},{"type":"link","label":"scissor_begin","href":"/docs/lua/render/draw/scissor_begin","docId":"lua/render/draw/scissor_begin"},{"type":"link","label":"scissor_end","href":"/docs/lua/render/draw/scissor_end","docId":"lua/render/draw/scissor_end"},{"type":"link","label":"calc_text_size","href":"/docs/lua/render/draw/calc_text_size","docId":"lua/render/draw/calc_text_size"},{"type":"link","label":"calc_health_color","href":"/docs/lua/render/draw/calc_health_color","docId":"lua/render/draw/calc_health_color"}],"href":"/docs/category/draw"}],"href":"/docs/category/render"}],"href":"/docs/category/lua-api"}]},"docs":{"getting-started/first-steps":{"id":"getting-started/first-steps","title":"First steps","description":"In this set of articles, you\'ll learn the core fundamentals to be able to use the Lua API.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"This article assumes you already have a fully functional libvirt domain with CPI passthrough working on a dedicated monitor. Otherwise, check out this ArchWiki page.","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"[url_lg]//looking-glass.io","sidebar":"tutorialSidebar"},"lua/render/color/a":{"id":"lua/render/color/a","title":"a","description":"Returns the alpha value (transparency) and optionally offers the possibility to update this value.","sidebar":"tutorialSidebar"},"lua/render/color/b":{"id":"lua/render/color/b","title":"b","description":"Returns the blue tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/g":{"id":"lua/render/color/g","title":"g","description":"Returns the green tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/hex":{"id":"lua/render/color/hex","title":"hex","description":"Returns the color value as 32 bit hexadecimal number.","sidebar":"tutorialSidebar"},"lua/render/color/new/hex":{"id":"lua/render/color/new/hex","title":"From hex","description":"Creates a new Color userdata and assigns it the values from hex to it.","sidebar":"tutorialSidebar"},"lua/render/color/new/rgba":{"id":"lua/render/color/new/rgba","title":"From rgba","description":"Creates a new Color userdata and assigns it the values r, g, b and optionally a.","sidebar":"tutorialSidebar"},"lua/render/color/new/string":{"id":"lua/render/color/new/string","title":"From string","description":"Creates a new Color userdata and assigns it the color from format.","sidebar":"tutorialSidebar"},"lua/render/color/opacity":{"id":"lua/render/color/opacity","title":"opacity","description":"Returns the value of the opacity and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/color/r":{"id":"lua/render/color/r","title":"r","description":"Returns the red tone and optionally offers the possibility to update it.","sidebar":"tutorialSidebar"},"lua/render/draw/calc_health_color":{"id":"lua/render/draw/calc_health_color","title":"calc_health_color","description":"Calculates the color from green to red based on the given health.","sidebar":"tutorialSidebar"},"lua/render/draw/calc_text_size":{"id":"lua/render/draw/calc_text_size","title":"calc_text_size","description":"Calculate the width and height of given text.","sidebar":"tutorialSidebar"},"lua/render/draw/circle":{"id":"lua/render/draw/circle","title":"circle","description":"Draws a circle.","sidebar":"tutorialSidebar"},"lua/render/draw/constants":{"id":"lua/render/draw/constants","title":"Constants","description":"An overview of global variables which can often be combined as a bit mask (flags).","sidebar":"tutorialSidebar"},"lua/render/draw/filled_circle":{"id":"lua/render/draw/filled_circle","title":"filled_circle","description":"Draws a filled circle.","sidebar":"tutorialSidebar"},"lua/render/draw/filled_rect":{"id":"lua/render/draw/filled_rect","title":"filled_rect","description":"Draws a filled rectangle.","sidebar":"tutorialSidebar"},"lua/render/draw/line":{"id":"lua/render/draw/line","title":"line","description":"Draws a line.","sidebar":"tutorialSidebar"},"lua/render/draw/rect":{"id":"lua/render/draw/rect","title":"rect","description":"Draws a rectangle.","sidebar":"tutorialSidebar"},"lua/render/draw/scissor_begin":{"id":"lua/render/draw/scissor_begin","title":"scissor_begin","description":"Start of redering within a region. Anything that rises above it is not visible.","sidebar":"tutorialSidebar"},"lua/render/draw/scissor_end":{"id":"lua/render/draw/scissor_end","title":"scissor_end","description":"Ends rendering within a specific region.","sidebar":"tutorialSidebar"},"lua/render/draw/text":{"id":"lua/render/draw/text","title":"text","description":"Draws a text.","sidebar":"tutorialSidebar"}}}')}}]);